<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://elvisblue.github.io/</id><title>Elvis</title><subtitle>A blog I can post random stuff about computer security.</subtitle> <updated>2024-07-04T09:30:36+07:00</updated> <author> <name>Elvis</name> <uri>https://elvisblue.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://elvisblue.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://elvisblue.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator> <rights> © 2024 Elvis </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Cracking a chess engine - ziy by s4r</title><link href="https://elvisblue.github.io/posts/ziy-solution/" rel="alternate" type="text/html" title="Cracking a chess engine - ziy by s4r" /><published>2023-07-02T09:00:00+07:00</published> <updated>2023-07-03T10:04:40+07:00</updated> <id>https://elvisblue.github.io/posts/ziy-solution/</id> <content src="https://elvisblue.github.io/posts/ziy-solution/" /> <author> <name>Elvis</name> </author> <category term="Writeup" /> <category term="Reverse Engineering" /> <summary> How to find a good crackme on crackmes.one? The answer is simple: good crackme usually created by skill reverser. ziy for example. I downloaded it 1 year ago but still have no time to try it until now. It takes me about 1 week to solve this. Challenge overview An ELF file which ask user to input 60 characters password. No obfuscation, no anti-debug or anti-disassembler trick but the code is qu... </summary> </entry> <entry><title>NahamCon CTF 2023 - Mayhem</title><link href="https://elvisblue.github.io/posts/nahamcon-mayhem-solution/" rel="alternate" type="text/html" title="NahamCon CTF 2023 - Mayhem" /><published>2023-06-17T09:19:00+07:00</published> <updated>2024-04-14T21:26:53+07:00</updated> <id>https://elvisblue.github.io/posts/nahamcon-mayhem-solution/</id> <content src="https://elvisblue.github.io/posts/nahamcon-mayhem-solution/" /> <author> <name>Elvis</name> </author> <category term="Writeup" /> <category term="Reverse Engineering" /> <summary> Last weekend I spent my free time to play NahamCon CTF with idek team. We managed to get 3rd place and first blood on Mayhem challenge. Here is a quick write up for the challenge. Challenge overview The SOC team noticed a system periodically beaconing to a suspicious IP address. A snapshot of the suspicious process' memory was taken but the IR team wants to know what exactly is going on with... </summary> </entry> <entry><title>s4r's hvm solution</title><link href="https://elvisblue.github.io/posts/hvm-solution/" rel="alternate" type="text/html" title="s4r's hvm solution" /><published>2023-06-17T09:19:00+07:00</published> <updated>2024-07-04T09:29:56+07:00</updated> <id>https://elvisblue.github.io/posts/hvm-solution/</id> <content src="https://elvisblue.github.io/posts/hvm-solution/" /> <author> <name>Elvis</name> </author> <category term="Writeup" /> <category term="Reverse Engineering" /> <summary> This is my old solution for s4r’s hvm crackme Analyze the crackme As the crackme’s description said that it’s a virtual machine (vm) one. Usually I will go quick while talking about reverse engineering the vm interpreter and will go into detail about vm ops code, what kind of vm, how does vm work,…. But this crackme worth to talk about the vm interpreter. The way crackme run the vm is very cr... </summary> </entry> </feed>
